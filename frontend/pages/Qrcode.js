import {
  Text,
  View,
  Image,
  TextInput,
  TouchableOpacity,
  ScrollView,
  Modal,
  Alert,
} from "react-native";
import { SafeAreaView } from "react-native-safe-area-context";
import { useState, useEffect } from "react";
import { Ionicons } from "@expo/vector-icons";
import PaymentData from '../Payment.json';

export default function PaymentPage({ navigation, route }) {
  
  const { roomId } = route.params || {};

  const [selectedPayment, setSelectedPayment] = useState("");
  const [confirmModalVisible, setConfirmModalVisible] = useState(false);
  const [creditAmount, setCreditAmount] = useState("");
  const [qrcode, setQrcode] = useState(false);
  const [quotationData, setQuotationData] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏≥‡∏•‡∏≠‡∏á API - ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å JSON
  const fetchPaymentData = async (roomId) => {

    try {
      setLoading(true);
      setError(null);
      
      console.log(`üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡πâ‡∏≠‡∏á: ${roomId}`);
      
      const room = PaymentData.rooms.find(r => r.RoomID === roomId);
      
      if (!room) {
        throw new Error(`‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡πâ‡∏≠‡∏á ${roomId}`);
      }
      
      if (!room.Payment || !room.Payment.quotation) {
        throw new Error('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ö‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏µ‡πâ');
      }
      
      console.log(`‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${room.Payment.quotation.productName}`);
      setQuotationData(room.Payment.quotation);
      
    } catch (error) {
      console.error('‚ùå Error fetching payment data:', error.message);
      setError(error.message);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    if (roomId) {
      fetchPaymentData(roomId);
    } else {
      setError('‡πÑ‡∏°‡πà‡∏°‡∏µ roomId');
      setLoading(false);
    }
  }, [roomId]);

  const handlePaymentSelect = (method) => {
    setSelectedPayment(method);
  };

  const handleFinalPayment = () => {
    if (!selectedPayment) {
      Alert.alert("‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô", "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô");
      return;
    }

    if (!quotationData) {
      Alert.alert("‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô", "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ö‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤");
      return;
    }

    if (selectedPayment === "credit") {
      if (
        !creditAmount ||
        parseFloat(creditAmount) < parseFloat(quotationData.price) + 50
      ) {
        Alert.alert("‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô", "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠");
        return;
      }
    }

    setConfirmModalVisible(true);
  };

const handleConfirmPayment = async () => {

  // try {
  
  //   const res = await fetch("http://localhost:5000/api/payment/confirm", {
  //     method: "POST",
  //     headers: { "Content-Type": "application/json" },
  //     body: JSON.stringify({ roomId })
  //   });

  //   const result = await res.json();
  //   console.log("üí∞ Updated quotation:", result);

  //   setConfirmModalVisible(false);
  //   navigation.goBack();

  // } catch (err) {
  //   console.error("Payment confirm error:", err);
  // }

  setConfirmModalVisible(false);
  navigation.goBack();

};
  

  // ‡πÅ‡∏™‡∏î‡∏á loading ‡∏´‡∏£‡∏∑‡∏≠ error
  if (loading) {
    return (
      <SafeAreaView className="flex-1 bg-gray-50 justify-center items-center">
        <Text className="text-gray-600 mb-2">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</Text>
        <Text className="text-gray-500 text-sm">Room ID: {roomId}</Text>
      </SafeAreaView>
    );
  }

  if (error || !quotationData) {
    return (
      <SafeAreaView className="flex-1 bg-gray-50 justify-center items-center">
        <Text className="text-red-600 mb-2">‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î</Text>
        <Text className="text-gray-500 text-sm mb-4">{error || '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'}</Text>
        <TouchableOpacity 
          className="bg-blue-500 px-4 py-2 rounded-lg"
          onPress={() => roomId && fetchPaymentData(roomId)}
        >
          <Text className="text-white">‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà</Text>
        </TouchableOpacity>
      </SafeAreaView>
    );
  }

  return (
    <SafeAreaView className="flex-1 bg-gray-50" edges={["top", "bottom"]}>
      {/* Header */}
      <View className="bg-blue-500 shadow-sm">
        <View className="flex-row items-center px-4 py-3 justify-between">
          <TouchableOpacity
            onPress={() => navigation.goBack()}
            className="w-10 h-10 bg-blue-400 rounded-full items-center justify-center"
          >
            <Ionicons name="arrow-back-outline" size={24} color="white" />
          </TouchableOpacity>
          <Text className="text-white font-semibold text-lg">‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô</Text>
          <Text className="text-white font-semibold text-lg"></Text>
        </View>
      </View>

      <ScrollView className="flex-1">
        {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ */}
        <View className="bg-white mx-4 mt-4 p-4 rounded-lg shadow-sm">
          <Text className="text-lg font-bold text-gray-800 mb-3">
            ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
          </Text>
          <View className="flex-row">
            <View className="w-20 h-20 bg-gray-200 rounded-lg mr-3">
              {/* TODO: ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏à‡∏≤‡∏Å quotationData.images */}
              {/* <Image 
                source={{ uri: quotationData.images }} 
                className="w-full h-full rounded-lg"
                resizeMode="cover"
              /> */}
              <Text className="text-gray-500 text-center leading-20">
                ‡∏£‡∏π‡∏õ
              </Text>
            </View>
            <View className="flex-1">
              <Text className="font-semibold text-gray-800">
                {quotationData.productName}
              </Text>
              <Text className="text-gray-600 text-sm mt-1">
                {quotationData.details}
              </Text>
              <Text className="text-blue-600 font-bold text-lg mt-2">
                ‡∏ø{quotationData.price}
              </Text>
            </View>
          </View>
        </View>

        {/* ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô */}
        <View className="bg-white mx-4 mt-4 p-4 rounded-lg shadow-sm">
          <Text className="text-lg font-bold text-gray-800 mb-4">
            ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
          </Text>

          {/* ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï - ‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡∏ô‡∏ï‡πå‡πÑ‡∏ß‡πâ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ó‡∏≥‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï */}
          <View
            // onPress={() => {handlePaymentSelect("credit"); setQrcode(false);}}
            className={`flex-row items-center p-4 mb-3 rounded-lg border-2  bg-gray-200 ${
              selectedPayment === "credit"
                ? "border-blue-500 bg-blue-50"
                : "border-gray-200"
            }`}
          >
            <View className="w-12 h-12 bg-yellow-100 rounded-full items-center justify-center mr-3">
              <Ionicons name="wallet" size={24} color="#EAB308" />
            </View>
            <View className="flex-1">
              <Text className="font-semibold text-gray-800">‡πÉ‡∏ä‡πâ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï</Text>
              <Text className="text-gray-600 text-sm">
                ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠: 50,000 ‡∏ö‡∏≤‡∏ó
              </Text>
            </View>
            <Ionicons
              name={
                selectedPayment === "credit"
                  ? "radio-button-on"
                  : "radio-button-off"
              }
              size={20}
              color={selectedPayment === "credit" ? "#3B82F6" : "#9CA3AF"}
            />
          </View>

          {/* ‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï */}
          {selectedPayment === "credit" && (
            <View className="bg-blue-50 p-4 mb-3 rounded-lg border border-blue-200">
              <Text className="text-gray-700 mb-2">
                ‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ
              </Text>
              <TextInput
                className="border border-gray-300 p-3 rounded-lg bg-white"
                placeholder={`‡πÉ‡∏™‡πà‡∏à‡∏≥‡∏ô‡∏ß‡∏ô (‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ ‡∏ø${parseInt(quotationData.price) + 50})`}
                keyboardType="numeric"
                value={creditAmount}
                onChangeText={setCreditAmount}
              />
            </View>
          )}

          {/* ‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô - ‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡∏ô‡∏ï‡πå‡πÑ‡∏ß‡πâ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£ */}
          <View
            // onPress={() => {handlePaymentSelect("transfer"); setQrcode(false);}}
            className={`flex-row items-center p-4 mb-3 rounded-lg border-2 bg-gray-200 ${
              selectedPayment === "transfer"
                ? "border-blue-500 bg-blue-50"
                : "border-gray-200"
            }`}
          >
            <View className="w-12 h-12 bg-green-100 rounded-full items-center justify-center mr-3">
              <Ionicons name="card" size={24} color="#22C55E" />
            </View>
            <View className="flex-1">
              <Text className="font-semibold text-gray-800">‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£</Text>
              <Text className="text-gray-600 text-sm">‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó</Text>
            </View>
            <Ionicons 
              name={selectedPayment === "transfer" ? "radio-button-on" : "radio-button-off"} 
              size={20}
              color={selectedPayment === "transfer" ? "#3B82F6" : "#9CA3AF"}
            />
          </View>

          {/* ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏û‡∏¢‡πå - ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ */}
          <TouchableOpacity
            onPress={() => {handlePaymentSelect("promptpay"); setQrcode(true);}}
            className={`flex-row items-center p-4 rounded-lg border-2 ${
              selectedPayment === "promptpay"
                ? "border-blue-500 bg-blue-50"
                : "border-gray-200"
            }`}
          >
            <View className="w-12 h-12 bg-purple-100 rounded-full items-center justify-center mr-3">
              <Ionicons name="qr-code" size={24} color="#8B5CF6" />
            </View>
            <View className="flex-1">
              <Text className="font-semibold text-gray-800">‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏û‡∏¢‡πå</Text>
              <Text className="text-gray-600 text-sm">
                ‡∏™‡πÅ‡∏Å‡∏ô QR Code ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ä‡∏≥‡∏£‡∏∞
              </Text>
            </View>
            <Ionicons
              name={selectedPayment === "promptpay" ? "radio-button-on" : "radio-button-off"}
              size={20}
              color={selectedPayment === "promptpay" ? "#3B82F6" : "#9CA3AF"}
            />
          </TouchableOpacity>
        </View>

        {/* ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô */}
        <View className="bg-white mx-4 mt-4 p-4 rounded-lg shadow-sm">
          <Text className="text-lg font-bold text-gray-800 mb-3">
            ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
          </Text>
          <View className="flex-row justify-between mb-2">
            <Text className="text-gray-600">‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</Text>
            <Text className="text-gray-800">‡∏ø{quotationData.price}</Text>
          </View>
          <View className="flex-row justify-between mb-2">
            <Text className="text-gray-600">‡∏Ñ‡πà‡∏≤‡∏ò‡∏£‡∏£‡∏°‡πÄ‡∏ô‡∏µ‡∏¢‡∏°</Text>
            <Text className="text-gray-800">‡∏ø50</Text>
          </View>
          <View className="border-t border-gray-200 pt-2">
            <View className="flex-row justify-between">
              <Text className="font-bold text-gray-800">‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏¥‡πâ‡∏ô</Text>
              <Text className="font-bold text-blue-600 text-lg">
                ‡∏ø{parseInt(quotationData.price) + 50}
              </Text>
            </View>
          </View>
        </View>
      </ScrollView>

      {/* ‡∏õ‡∏∏‡πà‡∏°‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô */}
      <View className="bg-white border-t border-gray-200 p-4">
        <TouchableOpacity
          onPress={handleFinalPayment}
          className={`py-4 rounded-lg ${selectedPayment ? "bg-blue-500" : "bg-gray-300"}`}
        >
          <Text
            className={`text-center font-bold text-lg ${selectedPayment ? "text-white" : "text-gray-500"}`}
          >
            ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô ‡∏ø{parseInt(quotationData.price) + 50}
          </Text>
        </TouchableOpacity>
      </View>

      {/* Modal ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞ */}
      <Modal visible={confirmModalVisible} transparent animationType="fade">
        {qrcode ? (
          <>
             <View className="flex-1 justify-center items-center bg-black/50">
              <View className="bg-white w-11/12 p-4 rounded-lg">
                <Text className="text-lg font-semibold mb-4 text-center">
                  ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
                </Text>

                <View className="w-full h-[40vh] mb-4 flex justify-center items-center">
                  {/* TODO: ‡∏™‡∏£‡πâ‡∏≤‡∏á QR Code ‡∏à‡∏£‡∏¥‡∏á‡∏à‡∏≤‡∏Å API */}
                  <Image
                    source={require("../assets/Qrcode.jpg")}
                    className="w-full h-full"
                  />
                  {/* <Text className="text-gray-500">QR Code ‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà</Text> */}
                </View>

                <View className="flex-row justify-between">
                  <TouchableOpacity
                    className="bg-gray-300 px-6 py-3 rounded-lg flex-1"
                    onPress={() => setConfirmModalVisible(false)}
                  >
                    <Text className="text-gray-700 text-center font-semibold">
                      ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
                    </Text>
                  </TouchableOpacity>
                </View>
              </View>
            </View>
          </>
        ) : (
          <>
            <View className="flex-1 justify-center items-center bg-black/50">
              <View className="bg-white w-11/12 p-4 rounded-lg">
                <Text className="text-lg font-semibold mb-4 text-center">
                  ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
                </Text>
                <View className="items-center mb-4">
                  <Ionicons name="checkmark-circle" size={60} color="#22C55E" />
                </View>
                <Text className="text-center text-gray-600 mb-2">
                  ‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏∞‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô
                </Text>
                <Text className="text-center font-bold text-2xl text-blue-600 mb-4">
                  ‡∏ø{parseInt(quotationData.price) + 50}
                </Text>
                <Text className="text-center text-gray-600 mb-6">
                  ‡∏ú‡πà‡∏≤‡∏ô
                  {selectedPayment === "credit"
                    ? "‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï"
                    : selectedPayment === "transfer"
                      ? "‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô"
                      : "‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏û‡∏¢‡πå"}
                </Text>
                <View className="flex-row justify-between">
                  <TouchableOpacity 
                    className="bg-gray-300 px-6 py-3 rounded-lg flex-1 mr-2"
                    onPress={() => setConfirmModalVisible(false)}
                  >
                    <Text className="text-gray-700 text-center font-semibold">‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</Text>
                  </TouchableOpacity>

                  <TouchableOpacity 
                    className="bg-blue-500 px-6 py-3 rounded-lg flex-1 ml-2"
                    onPress={handleConfirmPayment}
                  >
                    <Text className="text-white text-center font-semibold">‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô</Text>
                  </TouchableOpacity>
                </View>
              </View>
            </View>
          </>
        )}
      </Modal>
    </SafeAreaView>
  );
}